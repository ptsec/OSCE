###############################

####### Dynamic Analysis ######

###############################

##############################################################################

 Get the Registration Code and the 128 Bytes Registration Key (CTP Secret Key)
 
##############################################################################

1.Save the Encoded String Shows On the web page To file (for example enc)

1.1. cat enc | base64 -d  # decode the base64 string and extract the shellcode and the Registration Code

2.https://defuse.ca/online-x86-assembler.htm#disassembly2 # disassemble the shellcode to asm file

3.edit the asm file like that :

3.1. edit the asm file so only the opcodes remains :

xor eax,eax
push eax
push 0x20207225

3.2. add the following on the top of the asm file for the linker:

global _start
_start: 


3.3. change the following opcode:

push eax
func:  # add func:
lods   al,BYTE PTR ds:[esi] # replace to lodsb
xor eax,ebx
stos   BYTE PTR es:[edi],al	# replace to  stosb
loop func # rename the address 0xb7 to func 


so it would be like that :

push eax
func: 
lodsb
xor eax,ebx
stosb
loop func
push esp
pop esi
int3

3.4. save the updated assembly code to key.asm file

4.nasm -f elf key.asm -g # assemble the new and edited assembly code to elf format (linux) key.o file also created 

5. ld -o key key.o # link the key.o file to runable program key 

6. gdb ./key # now we can debug the program with gdb 

6.1. b 53 # put breakpoint on pop esi opcode (line 53 in our code) to see what value return from the stack

6.2. run 

6.3. x/5s $esp # see the content of the stack after the pop esi occured and get the 128 Bytes Registration Key

7. print(len(key)) #validate the length of the key is 128 Bytes with python 
